{"version":3,"sources":["transitions/slide.module.css","transitions/list.module.css","components/ContactList/ContactList.module.css","components/ContactForm/Contactform.module.css","components/App.module.css","transitions/pop.module.css","components/Notification/Notification.module.css","components/ContactList/ContactList.js","components/ContactForm/Contactform.js","components/Filter/Filter.js","components/Notification/Notification.js","components/App.js","index.js"],"names":["module","exports","ContactList","items","onDelete","length","TransitionGroup","component","className","styles","map","name","id","number","CSSTransition","key","timeout","classNames","list","unmountOnExit","type","onClick","Contactform","state","handleChange","target","setState","value","handleSubmit","e","preventDefault","props","onAddItem","clearState","this","onSubmit","placeholder","onChange","button","Component","Filter","onSetFilter","loginInputId","shortid","Notification","notification","App","contacts","filter","isVisible","isNotification","isFilter","filterContacts","contact","toLowerCase","includes","setFilter","addItem","contactExist","find","item","showNotification","generate","prevState","setTimeout","deleteItem","storage","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","filtratedContacts","container","in","slide","pop","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.717b32e5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slide_enter__3cy1H\",\"enterActive\":\"slide_enterActive__34-SY\",\"exit\":\"slide_exit__1_M02\",\"exitActive\":\"slide_exitActive__7od10\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"list_enter__1xuH-\",\"enterActive\":\"list_enterActive__2okoP\",\"exit\":\"list_exit__3ZfMF\",\"exitActive\":\"list_exitActive__3k4zR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__3YlBy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Contactform_button__2eJIS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3SDlh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"pop_enter__3WKtv\",\"enterActive\":\"pop_enterActive__1Bv0C\",\"exit\":\"pop_exit__3yguY\",\"exitActive\":\"pop_exitActive__3SOXW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__30HT0\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {TransitionGroup, CSSTransition} from 'react-transition-group';\r\nimport list from '../../transitions/list.module.css';\r\nimport styles from './ContactList.module.css';\r\n\r\n\r\nconst ContactList = ({ items, onDelete }) => {\r\n  return items.length ? (\r\n    <TransitionGroup component=\"ul\" className={styles.ContactList}>\r\n        {items.map(({ name, id, number }) => {\r\n          return (\r\n            <CSSTransition \r\n            key={id} \r\n            timeout={250} \r\n            classNames={list}\r\n            unmountOnExit>\r\n            <li>\r\n              <span>\r\n                {name} {number}\r\n              </span>\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => onDelete(id)}\r\n              >\r\n                Delete\r\n              </button>\r\n            </li>\r\n            </CSSTransition>\r\n          );\r\n        })}\r\n      </TransitionGroup>\r\n    ): null;\r\n    // );\r\n      };\r\n\r\nContactList.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\nexport default ContactList;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Contactform.module.css';\r\n\r\nclass Contactform extends Component {\r\n  static propTypes = {\r\n    onAddItem: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = ({ target }) => {\r\n    this.setState({\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (this.state.name && this.state.number) {\r\n      this.props.onAddItem({ ...this.state });\r\n    }\r\n    this.clearState();\r\n  };\r\n\r\n  clearState = () => {\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          placeholder=\"Введите имя\"\r\n          onChange={this.handleChange}\r\n          value={name}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"number\"\r\n          placeholder=\"Введите номер\"\r\n          onChange={this.handleChange}\r\n          value={number}\r\n        />\r\n        <button type=\"submit\" className={styles.button}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contactform;","import React from 'react';\r\nimport shortid from 'shortid';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ value, onSetFilter }) => {\r\n  const loginInputId = shortid();\r\n\r\n  return (\r\n    <form>\r\n      <h3>Find contact by name</h3>\r\n      <input\r\n        onChange={onSetFilter}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        id={loginInputId}\r\n        placeholder=\"Поиск контакта по имени\"\r\n        value={value}\r\n      />\r\n    </form>\r\n  );\r\n};\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onSetFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;","import React from 'react';\r\nimport styles from './Notification.module.css';\r\n\r\nconst Notification = () => {\r\n  return <div className={styles.notification}>Contact already exist!</div>;\r\n};\r\n\r\nexport default Notification;","import React, { Component } from 'react';\r\nimport shortid from 'shortid';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport ContactList from './ContactList/ContactList';\r\nimport ContactForm from './ContactForm/Contactform';\r\nimport Filter from './Filter/Filter';\r\nimport styles from './App.module.css';\r\nimport pop from '../transitions/pop.module.css';\r\nimport slide from '../transitions/slide.module.css';\r\nimport Notification from './Notification/Notification';\r\n\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ],\r\n    filter: '',\r\n    isVisible: false,\r\n    isNotification: false,\r\n    isFilter: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ isVisible: true, isFilter: true });\r\n    const storage = localStorage.getItem('contacts');\r\n    if (storage !== null) {\r\n      this.setState({ contacts: JSON.parse(storage) });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { contacts } = this.state;\r\n    if (prevState.contacts !== contacts) {\r\n      localStorage.setItem('contacts', JSON.stringify(contacts));\r\n    }\r\n  }\r\n\r\n  filterContacts = (contacts, filter) => {\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  };\r\n  \r\n\r\n  setFilter = ({ target }) => {\r\n    this.setState({\r\n      filter: target.value,\r\n    });\r\n  };\r\n\r\n  addItem = ({ name, number }) => {\r\n    const { contacts } = this.state;\r\n    let contactExist = contacts.find(item => item.name === name);\r\n\r\n    if (contacts.length > 0 && contactExist) {\r\n      this.setState({ isNotification: true });\r\n      this.showNotification();\r\n    } else {\r\n      const contact = {\r\n        id: shortid.generate(),\r\n        name,\r\n        number,\r\n      };\r\n      this.setState(prevState => ({\r\n        contacts: [...prevState.contacts, contact],\r\n      }));\r\n    }\r\n  };\r\n      \r\n  showNotification = () =>\r\n  setTimeout(() => this.setState({ isNotification: false }), 2000);\r\n\r\n  deleteItem = id => {\r\n    this.setState(state => ({\r\n      contacts: state.contacts.filter(contact => contact.id !== id),\r\n    }));\r\n  };\r\n\r\n  render() { \r\n    const { contacts, filter, isVisible, isNotification, isFilter } = this.state;\r\n    const filtratedContacts = this.filterContacts(contacts, filter);\r\n    return (\r\n      <div className={styles.container}>\r\n       <CSSTransition\r\n          in={isNotification}\r\n          timeout={500}\r\n          classNames={slide}\r\n          unmountOnExit\r\n        >\r\n        <Notification />\r\n        </CSSTransition>\r\n        <CSSTransition\r\n          in={isVisible}\r\n          timeout={500}\r\n          classNames={slide}\r\n          unmountOnExit\r\n        >\r\n        <h1>Phonebook</h1>\r\n        </CSSTransition>\r\n      \r\n        <ContactForm onAddItem={this.addItem} />\r\n        <h2>Contacts</h2>\r\n        {contacts.length > 1 && (\r\n          <CSSTransition\r\n            in={isFilter}\r\n            timeout={250}\r\n            unmountOnExit\r\n            classNames={pop}\r\n          >\r\n        <Filter onSetFilter={this.setFilter} value={this.state.filter} />\r\n        </CSSTransition> )}\r\n        <ContactList items={filtratedContacts} onDelete={this.deleteItem} />\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));\r\n"],"sourceRoot":""}